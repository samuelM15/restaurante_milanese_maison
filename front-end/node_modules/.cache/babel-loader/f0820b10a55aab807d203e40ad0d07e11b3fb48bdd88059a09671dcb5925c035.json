{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.Mesquita\\\\Documents\\\\Minhas_tarefas\\\\Atlantico_FullStack\\\\trabalhando_react_nodejs\\\\cafe-do-amanha-main\\\\cafe-do-amanha-main\\\\src\\\\componentes\\\\Pedidos.jsx\",\n  _s = $RefreshSig$();\n// src/ProductForm.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Modal, Button } from 'react-bootstrap';\nimport './Pedidos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = () => {\n  _s();\n  //useState do usuario---------------------------\n  const [order, setOrder] = useState({\n    name: '',\n    tambleNumber: '',\n    items: []\n  });\n\n  //Get no banco de daods dos produtos e suas respectivas categorias------\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/produtos').then(response => {\n      const categorias = {\n        entrada: {},\n        sobremesa: {},\n        bebida: {},\n        prato_principal: {},\n        moda_da_casa: {}\n      };\n      response.data.forEach(item => {\n        if (categorias[item.categoria]) {\n          categorias[item.categoria].push(item);\n        }\n      });\n      setUseProdutos(categorias);\n    }).catch(error => console.error(\"Erro ao buscar produtos:\", error));\n  }, []);\n\n  //UseStates das listas acima----------------------------------\n  const [useProdutos, setUseProdutos] = useState({});\n  //setShows de cada opção----------------------------------------\n  const [ProdutosModal, setProdutosModal] = useState(false);\n  const [quantidade, setQuantidade] = useState(1);\n  const [categoriaAtual, setCategoriaAtual] = useState('');\n  const [itemAtual, setItematual] = useState('');\n\n  //Atualizações dos produtos---------------------------- \n  const handleEntradaChange = e => {\n    setEntradaId(Number(e.target.value));\n  };\n  const handlePrincipalChange = e => {\n    setPrincipalId(Number(e.target.value));\n  };\n  const handleModaCasaChange = e => {\n    setModaCasaId(Number(e.target.value));\n  };\n  const handleSobremesaChange = e => {\n    setSobremesaId(Number(e.target.value));\n  };\n  const handleBebidaChange = e => {\n    setBebidaId(Number(e.target.value));\n  };\n  const handleQuantidadeChange = e => {\n    setQuantidade(Number(e.target.value));\n  };\n\n  //botões do form para pop-ups------------------------------------------\n  const handleEntradaClick = categoria => {\n    setCategoriaAtual(categoria);\n    setItematual('');\n    setQuantidade(1);\n    setProdutosModal(true);\n  };\n  const handleAddItem = () => {\n    if (!itemAtual || categoriaAtual <= 0) {\n      alert('Você precisa adicionar um produto e uma quantidade para effetuar a compra');\n      return;\n    }\n    const renovarItens = [...order.items];\n    const existingItem = renovarItens.items.findIndex(item => item.categoria === categoriaAtual && item.nome === itemAtual);\n    if (existingItem) {\n      renovarItens[existingItem].quantidade += quantidade;\n    } else {\n      renovarItens.push({\n        nome: itemAtual,\n        quantidade: quantidade,\n        categoria: categoriaAtual\n      });\n    }\n    setOrder({\n      ...prevOrder,\n      items: newItems\n    });\n    setProdutosModal(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const totalPedido = order.items.reduce((acc, item) => acc + item.preco * item.quantidade, 0);\n    alert(`Pedido enviado com sucesso! Valor total: R$ ${totalPedido.toFixed(2)}`);\n    setOrder({\n      name: '',\n      tableNumber: '',\n      items: []\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"secao_pedidos \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Selecione o Produto e a Quantidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bados_user\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: order.name,\n            onChange: e => setOrder({\n              ...order,\n              name: e.target.value\n            }),\n            placeholder: \"Nome do cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: order.tambleNumber,\n            onChange: e => setOrder({\n              ...order,\n              tableNumber: e.target.value\n            }),\n            placeholder: \"Mesa do cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_Categorias\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"button_pedidos\",\n            onClick: handleEntradaClick,\n            children: \"Entradas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button_pedidos\",\n            onClick: handlePrincipalClick,\n            children: \"Pratos Principais\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button_pedidos\",\n            onClick: handleModaCasaClick,\n            children: \"A Moda da Casa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button_pedidos\",\n            onClick: handleSobremesaClick,\n            children: \"Sobremesas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button_pedidos\",\n            onClick: handleBebidaClick,\n            children: \"Bebidas\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"Total: R$\", CalculoTotal().toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Notinha\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Itens do Pedido:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: order.items.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.nome, \" - \", item.quantidade, \"x R$\", item.preco.toFixed(2), \" = R$\", (item.preco * item.quantidade).toFixed(2)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: entradaModal,\n        onHide: () => setEntradaModal(false),\n        children: /*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: [/*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Selecione a entrada e a quantidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Box_produto\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"entradaSelect\",\n                children: \"Entrada:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                className: \"produtoSelect\",\n                name: \"entradaSelect\",\n                value: entradaId,\n                onChange: handleEntradaChange,\n                children: Object.keys(entradaId).map(categoria => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: categoria,\n                  children: [categoria, \" - R$\", entradaId.preco.toFixed(2)]\n                }, categoria, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 41\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Box_quantidade\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \" Quantidade:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: quantidade,\n                onChange: handleQuantidadeChange,\n                min: \"1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-secondary\",\n                variant: \"secondary\",\n                onClick: () => setEntradaModal(false),\n                children: \"Cancelar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"btn-primary\",\n                variant: \"primary\",\n                onClick: () => handleAddItem(\"Entradas\", entradaId, quantidade),\n                children: \"Adicionar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductForm, \"7brAZ9l0ivY+QC07h23v6k8e+uw=\");\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","Button","jsxDEV","_jsxDEV","ProductForm","_s","order","setOrder","name","tambleNumber","items","get","then","response","categorias","entrada","sobremesa","bebida","prato_principal","moda_da_casa","data","forEach","item","categoria","push","setUseProdutos","catch","error","console","useProdutos","ProdutosModal","setProdutosModal","quantidade","setQuantidade","categoriaAtual","setCategoriaAtual","itemAtual","setItematual","handleEntradaChange","e","setEntradaId","Number","target","value","handlePrincipalChange","setPrincipalId","handleModaCasaChange","setModaCasaId","handleSobremesaChange","setSobremesaId","handleBebidaChange","setBebidaId","handleQuantidadeChange","handleEntradaClick","handleAddItem","alert","renovarItens","existingItem","findIndex","nome","prevOrder","newItems","handleSubmit","preventDefault","totalPedido","reduce","acc","preco","toFixed","tableNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","placeholder","onClick","handlePrincipalClick","handleModaCasaClick","handleSobremesaClick","handleBebidaClick","CalculoTotal","map","index","show","entradaModal","onHide","setEntradaModal","Header","closeButton","Title","Body","htmlFor","entradaId","Object","keys","min","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/S.Mesquita/Documents/Minhas_tarefas/Atlantico_FullStack/trabalhando_react_nodejs/cafe-do-amanha-main/cafe-do-amanha-main/src/componentes/Pedidos.jsx"],"sourcesContent":["// src/ProductForm.js\nimport React, { useState,useEffect } from 'react';\nimport axios from 'axios';\nimport {Modal, Button} from 'react-bootstrap';\nimport './Pedidos.css';\n\nconst ProductForm =() => {\n    //useState do usuario---------------------------\n    const [order, setOrder] = useState({\n        name: '',\n        tambleNumber: '',\n        items: []\n    })\n\n   //Get no banco de daods dos produtos e suas respectivas categorias------\n   useEffect(() => {\n    axios.get('http://localhost:3000/api/produtos')\n        .then(response => {\n            const categorias = {\n                entrada: {},\n                sobremesa: {},\n                bebida: {},\n                prato_principal: {},\n                moda_da_casa: {}\n            };\n\n            response.data.forEach(item => {\n                if (categorias[item.categoria]) {\n                    categorias[item.categoria].push(item);\n                }\n            });\n\n            setUseProdutos(categorias);\n        })\n        .catch(error => console.error(\"Erro ao buscar produtos:\", error));\n    }, []);\n\n    //UseStates das listas acima----------------------------------\n    const [useProdutos, setUseProdutos] = useState({});\n    //setShows de cada opção----------------------------------------\n    const [ProdutosModal, setProdutosModal] = useState(false);\n\n    const [quantidade, setQuantidade] = useState(1);\n\n    const [categoriaAtual, setCategoriaAtual] = useState('');\n    const [itemAtual, setItematual] = useState('');\n\n    //Atualizações dos produtos---------------------------- \n    const handleEntradaChange = (e) => {\n        setEntradaId(Number(e.target.value));\n    };\n    const handlePrincipalChange = (e) => {\n        setPrincipalId(Number(e.target.value));\n    };\n    const handleModaCasaChange = (e) => {\n        setModaCasaId(Number(e.target.value));\n    };\n    const handleSobremesaChange = (e) => {\n        setSobremesaId(Number(e.target.value));\n    };\n    const handleBebidaChange = (e) => {\n        setBebidaId(Number(e.target.value));\n    };\n\n    const handleQuantidadeChange = (e) => {\n        setQuantidade(Number(e.target.value));\n    };\n\n    //botões do form para pop-ups------------------------------------------\n    const handleEntradaClick = (categoria) => {\n        setCategoriaAtual(categoria);\n        setItematual('');\n        setQuantidade(1);\n        setProdutosModal(true);\n    };\n\n\n    const handleAddItem = () => {\n        if(!itemAtual || categoriaAtual<=0){\n            alert('Você precisa adicionar um produto e uma quantidade para effetuar a compra');\n            return;\n        }\n\n        const renovarItens = [...order.items];\n        const existingItem = renovarItens.items.findIndex(item=> item.categoria === categoriaAtual && item.nome === itemAtual);\n        \n        if (existingItem) {\n            renovarItens[existingItem].quantidade += quantidade;\n        } else {\n            renovarItens.push({nome:itemAtual, quantidade:quantidade, categoria: categoriaAtual});\n        }\n    \n        setOrder({ \n            ...prevOrder, \n            items: newItems \n        }); \n\n        setProdutosModal(false);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n        const totalPedido = order.items.reduce((acc, item) => acc + item.preco * item.quantidade, 0);\n        alert(`Pedido enviado com sucesso! Valor total: R$ ${totalPedido.toFixed(2)}`);\n        setOrder({\n            name: '',\n            tableNumber: '',\n            items: []\n        });\n    };\n\n    return (\n        <section className='secao_pedidos '>\n            <div className='body'>\n                <h1>Selecione o Produto e a Quantidade</h1>\n\n                <form onSubmit={handleSubmit} className='form'>\n                <div className='box_bados_user'>\n                    <input \n                        type=\"text\" \n                        value={order.name} \n                        onChange={(e) => setOrder({...order,name: e.target.value})} \n                        placeholder='Nome do cliente'/>\n\n                    <input \n                        type=\"text\" \n                        value={order.tambleNumber} \n                        onChange={(e) => setOrder({...order,tableNumber: e.target.value})} \n                        placeholder='Mesa do cliente'/>\n                </div>\n\n                    <div className='box_Categorias'>\n                        <Button className='button_pedidos' onClick={handleEntradaClick}>Entradas</Button>\n                        <Button className='button_pedidos' onClick={handlePrincipalClick}>Pratos Principais</Button>\n                        <Button className='button_pedidos' onClick={handleModaCasaClick}>A Moda da Casa</Button>\n                        <Button className='button_pedidos' onClick={handleSobremesaClick}>Sobremesas</Button>\n                        <Button className='button_pedidos' onClick={handleBebidaClick}>Bebidas</Button>\n                    </div>\n                    <h2>Total: R${CalculoTotal().toFixed(2)}</h2>\n                    <button type=\"submit\">Enviar pedido</button>\n                </form>\n\n                <div className='Notinha'>\n                    <h2>Itens do Pedido:</h2>\n                    <ul>\n                        {order.items.map((item, index) => (\n                            <li key={index}>\n                                {item.nome} - {item.quantidade}x R${item.preco.toFixed(2)} = R${(item.preco * item.quantidade).toFixed(2)}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n                {/* Modal Entradas */}\n                <Modal show={entradaModal} onHide={() => setEntradaModal(false)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Selecione a entrada e a quantidade</Modal.Title>\n                        <Modal.Body>\n                            <div className='Box_produto'>\n                                <label htmlFor='entradaSelect'>Entrada:</label>\n                                <select className='produtoSelect' name='entradaSelect' value={entradaId} onChange={handleEntradaChange}>\n                                    {Object.keys(entradaId).map(categoria => (\n                                        <option key={categoria} value={categoria}> \n                                            {categoria} - R${entradaId.preco.toFixed(2)}\n                                        </option>\n                                    ))}\n                                </select>\n                            </div>\n                            <div className='Box_quantidade'>\n                                <label> Quantidade:</label>\n                                <input type=\"number\" value={quantidade} onChange={handleQuantidadeChange} min=\"1\"/>\n                            </div>\n                            <Modal.Footer>\n                                <Button className='btn-secondary' variant='secondary' onClick={()=> setEntradaModal(false)}>\n                                    Cancelar\n                                </Button>\n                                <Button className='btn-primary' variant='primary' onClick={() => handleAddItem(\"Entradas\", entradaId, quantidade)}>\n                                    Adicionar\n                                </Button>\n                            </Modal.Footer>\n                        </Modal.Body>\n                    </Modal.Header>\n                </Modal>\n\n            </div>\n        </section>\n    );\n}\n\nexport default ProductForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}