{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\S.Mesquita\\\\Documents\\\\Minhas_tarefas\\\\Atlantico_FullStack\\\\trabalhando_react_nodejs\\\\cafe-do-amanha-main\\\\cafe-do-amanha-main\\\\src\\\\componentes\\\\Pedidos.jsx\",\n  _s = $RefreshSig$();\n// src/ProductForm.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Modal, Button } from 'react-bootstrap';\nimport './Pedidos.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductForm = () => {\n  _s();\n  //useState do usuario---------------------------\n  const [order, setOrder] = useState({\n    name: '',\n    tambleNumber: '',\n    items: []\n  });\n\n  //UseStates das listas acima----------------------------------\n  const [useProdutos, setUseProdutos] = useState({});\n  //setShows de cada opção----------------------------------------\n  const [ProdutosModal, setProdutosModal] = useState(false);\n  const [quantidade, setQuantidade] = useState(1);\n  const [categoriaAtual, setCategoriaAtual] = useState('');\n  const [itemAtual, setItematual] = useState('');\n\n  //Get no banco de daods dos produtos e suas respectivas categorias------\n  useEffect(() => {\n    axios.get('http://localhost:3000/api/produtos').then(response => {\n      console.log(\"Dados recebidos da API:\", response.data);\n      const categorias = {\n        entrada: {},\n        sobremesa: {},\n        bebida: {},\n        prato_principal: {},\n        moda_da_casa: {}\n      };\n      response.data.forEach(item => {\n        if (categorias[item.categoria]) {\n          categorias[item.categoria][item.nome_produto] = item.preco;\n        }\n      });\n      console.log(\"Produtos organizados:\", categorias);\n      setUseProdutos(categorias);\n      console.log(\"Atualização do estado:\", categorias);\n    }).catch(error => {\n      console.error(\"Erro ao buscar produtos:\", error);\n    });\n  }, []);\n  useEffect(() => {\n    // Verifique o valor de useProdutos sempre que ele for atualizado\n    console.log(\"Estado useProdutos atualizado:\", useProdutos);\n  }, [useProdutos]); // Dependência de useProdutos para monitorar a atualização\n\n  //botões do form para pop-ups------------------------------------------\n  function handleCategoriaClick(categoria) {\n    console.log(\"Categoria selecionada:\", categoria);\n    setCategoriaAtual(categoria);\n    setItematual('');\n    setQuantidade(1);\n    setProdutosModal(true);\n  }\n  const handleAddItem = () => {\n    if (!itemAtual || quantidade <= 0) {\n      alert('Você precisa adicionar um produto e uma quantidade para effetuar a compra');\n      return;\n    }\n    const atualizarItens = [...order.items];\n    const existingItem = atualizarItens.findIndex(item => item.categoria === categoriaAtual && item.nome_produto === itemAtual);\n    if (existingItem !== -1) {\n      atualizarItens[existingItem].quantidade += quantidade;\n    } else {\n      atualizarItens.push({\n        nome_produto: itemAtual,\n        quantidade: quantidade,\n        categoria: categoriaAtual\n      });\n    }\n    setOrder({\n      ...order,\n      items: atualizarItens\n    });\n    setProdutosModal(false);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('http://localhost:3000/api/pedidos', {\n      name: order.name,\n      mesa: order.tambleNumber,\n      items: order.items\n    }).then(result => {\n      alert(`Pedido enviado com sucesso! Valor total: R$ ${result.data.total.toFixed(2)}`);\n      setOrder({\n        name: '',\n        tableNumber: '',\n        items: []\n      });\n    }).catch(error => {\n      console.log('Ocorreu um erro no envio do pedido!', error);\n      alert('Erro ao efetuar a compra!!');\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"secao_pedidos \",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Selecione o Produto e a Quantidade\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_bados_user\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: order.name,\n            onChange: e => setOrder({\n              ...order,\n              name: e.target.value\n            }),\n            placeholder: \"Nome do cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: order.tambleNumber,\n            onChange: e => setOrder({\n              ...order,\n              tambleNumber: e.target.value\n            }),\n            placeholder: \"Mesa do cliente\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box_Categorias\",\n          children: Object.keys(useProdutos).map(categoria => /*#__PURE__*/_jsxDEV(Button, {\n            className: \"button_pedidos\",\n            onClick: () => handleCategoriaClick(categoria),\n            children: categoria.charAt(0).toUpperCase() + categoria.slice(1)\n          }, categoria, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Enviar pedido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        show: ProdutosModal,\n        onHide: () => setProdutosModal(false),\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            children: \"Selecione o produto e a quantidade\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Box_produto\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"entradaSelect\",\n              children: \"Produtos:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              className: \"produtoSelect\",\n              name: \"produtoSelect\",\n              value: itemAtual,\n              onChange: e => setItematual(e.target.value),\n              disabled: !useProdutos[categoriaAtual] || Object.keys(useProdutos[categoriaAtual]).length === 0,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Selecione um item\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 37\n              }, this), (useProdutos[categoriaAtual] ? Object.entries(useProdutos[categoriaAtual]) : []).map(([nome, preco]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: nome,\n                children: [nome, \" - R$\", preco.toFixed(2)]\n              }, nome, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this)), console.log(useProdutos)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Box_quantidade\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" Quantidade:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"quantidade\",\n              value: quantidade,\n              onChange: e => setQuantidade(parseInt(e.target.value)),\n              min: \"1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-secondary\",\n              variant: \"secondary\",\n              onClick: () => setProdutosModal(false),\n              children: \"Cancelar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-primary\",\n              variant: \"primary\",\n              onClick: handleAddItem,\n              children: \"Adicionar items ao pedido\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(ProductForm, \"aCI1t6QfH3vYABRvinmjfh88INM=\");\n_c = ProductForm;\nexport default ProductForm;\nvar _c;\n$RefreshReg$(_c, \"ProductForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","Modal","Button","jsxDEV","_jsxDEV","ProductForm","_s","order","setOrder","name","tambleNumber","items","useProdutos","setUseProdutos","ProdutosModal","setProdutosModal","quantidade","setQuantidade","categoriaAtual","setCategoriaAtual","itemAtual","setItematual","get","then","response","console","log","data","categorias","entrada","sobremesa","bebida","prato_principal","moda_da_casa","forEach","item","categoria","nome_produto","preco","catch","error","handleCategoriaClick","handleAddItem","alert","atualizarItens","existingItem","findIndex","push","handleSubmit","e","preventDefault","post","mesa","result","total","toFixed","tableNumber","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","Object","keys","map","onClick","charAt","toUpperCase","slice","show","onHide","Header","closeButton","Title","Body","htmlFor","disabled","length","entries","nome","parseInt","min","Footer","variant","_c","$RefreshReg$"],"sources":["C:/Users/S.Mesquita/Documents/Minhas_tarefas/Atlantico_FullStack/trabalhando_react_nodejs/cafe-do-amanha-main/cafe-do-amanha-main/src/componentes/Pedidos.jsx"],"sourcesContent":["// src/ProductForm.js\nimport React, { useState,useEffect } from 'react';\nimport axios from 'axios';\nimport {Modal, Button} from 'react-bootstrap';\nimport './Pedidos.css';\n\nconst ProductForm =() => {\n    //useState do usuario---------------------------\n    const [order, setOrder] = useState({\n        name: '',\n        tambleNumber: '',\n        items: []\n    })\n\n    //UseStates das listas acima----------------------------------\n    const [useProdutos, setUseProdutos] = useState({});\n    //setShows de cada opção----------------------------------------\n    const [ProdutosModal, setProdutosModal] = useState(false);\n\n    const [quantidade, setQuantidade] = useState(1);\n\n    const [categoriaAtual, setCategoriaAtual] = useState('');\n    const [itemAtual, setItematual] = useState('');\n\n\n   //Get no banco de daods dos produtos e suas respectivas categorias------\n   useEffect(() => {\n    axios.get('http://localhost:3000/api/produtos')\n        .then(response => {\n            \n            console.log(\"Dados recebidos da API:\", response.data);\n            \n            const categorias = {\n                entrada: {},\n                sobremesa: {},\n                bebida: {},\n                prato_principal: {},\n                moda_da_casa: {}\n            };\n\n            response.data.forEach(item => {\n                if (categorias[item.categoria]){\n                    categorias[item.categoria][item.nome_produto] = item.preco;\n                }\n            });\n\n            console.log(\"Produtos organizados:\", categorias);\n            setUseProdutos(categorias);\n\n            console.log(\"Atualização do estado:\", categorias);\n        })\n        .catch(error =>{\n            console.error(\"Erro ao buscar produtos:\", error);\n        });\n    }, []);\n\n    useEffect(() => {\n        // Verifique o valor de useProdutos sempre que ele for atualizado\n        console.log(\"Estado useProdutos atualizado:\", useProdutos);\n    }, [useProdutos]);  // Dependência de useProdutos para monitorar a atualização\n\n    //botões do form para pop-ups------------------------------------------\n    function handleCategoriaClick(categoria) {\n        console.log(\"Categoria selecionada:\", categoria);\n        setCategoriaAtual(categoria);\n        setItematual('');\n        setQuantidade(1);\n        setProdutosModal(true);\n    }\n\n\n    const handleAddItem = () => {\n        if(!itemAtual || quantidade<=0){\n            alert('Você precisa adicionar um produto e uma quantidade para effetuar a compra');\n            return;\n        }\n\n        const atualizarItens = [...order.items];\n        const existingItem = atualizarItens.findIndex(item=> item.categoria === categoriaAtual && item.nome_produto === itemAtual);\n        \n        if (existingItem !== -1) {\n            atualizarItens[existingItem].quantidade += quantidade;\n        } else {\n            atualizarItens.push({nome_produto:itemAtual, quantidade:quantidade, categoria: categoriaAtual});\n        }\n    \n        setOrder({ \n            ...order, \n            items: atualizarItens \n        }); \n\n        setProdutosModal(false);\n    }\n\n    const handleSubmit = (e) =>{\n        e.preventDefault();\n\n        axios.post('http://localhost:3000/api/pedidos',{\n            name: order.name,\n            mesa: order.tambleNumber,\n            items: order.items\n        })\n        .then(result =>{\n            alert(`Pedido enviado com sucesso! Valor total: R$ ${result.data.total.toFixed(2)}`);\n            setOrder({\n                name: '',\n                tableNumber: '',\n                items: []\n            });\n        }) \n        .catch(error =>{\n            console.log('Ocorreu um erro no envio do pedido!', error);\n            alert('Erro ao efetuar a compra!!');\n        });\n        \n       \n    };\n\n    return (\n        <section className='secao_pedidos '>\n            <div className='body'>\n                <h1>Selecione o Produto e a Quantidade</h1>\n\n                <form onSubmit={handleSubmit} className='form'>\n                    <div className='box_bados_user'>\n                        <input \n                            type=\"text\" \n                            value={order.name} \n                            onChange={(e) => setOrder({...order,name: e.target.value})} \n                            placeholder='Nome do cliente'\n                        />\n\n                        <input \n                            type=\"text\" \n                            value={order.tambleNumber} \n                            onChange={(e) => setOrder({...order,tambleNumber: e.target.value})} \n                            placeholder='Mesa do cliente'\n                        />\n                    </div>\n\n                        <div className='box_Categorias'>\n                            {Object.keys(useProdutos).map((categoria) =>(\n                                <Button key={categoria} className='button_pedidos' onClick={() => handleCategoriaClick(categoria)}>\n                                    {categoria.charAt(0).toUpperCase() + categoria.slice(1)}\n                                </Button>\n                            ))}\n                        </div>\n                        <button type=\"submit\">Enviar pedido</button>\n                </form>\n\n\n                {/* Modal Entradas */}\n                <Modal show={ProdutosModal} onHide={() => setProdutosModal(false)}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>Selecione o produto e a quantidade</Modal.Title>\n                    </Modal.Header>\n                        <Modal.Body>\n                            <div className='Box_produto'>\n                                <label htmlFor='entradaSelect'>Produtos:</label>\n                                <select \n                                    className='produtoSelect' \n                                    name='produtoSelect' \n                                    value={itemAtual} \n                                    onChange={(e) => setItematual(e.target.value)}\n                                    disabled={!useProdutos[categoriaAtual] || Object.keys(useProdutos[categoriaAtual]).length === 0}\n                                >\n                                    <option value=\"\">Selecione um item</option>\n                                    {(useProdutos[categoriaAtual]? Object.entries(useProdutos[categoriaAtual]) : []).map(([nome, preco]) => (\n                                        <option key={nome} value={nome}>\n                                            {nome} - R${preco.toFixed(2)}\n                                        </option>\n                                    ))}\n                                    {console.log(useProdutos)}\n                                </select>\n                            </div>\n\n                            <div className='Box_quantidade'>\n                                <label> Quantidade:</label>\n                                <input \n                                    type=\"number\" \n                                    name='quantidade'\n                                    value={quantidade} \n                                    onChange={(e) => setQuantidade(parseInt(e.target.value))} \n                                    min=\"1\"\n                                />\n                            </div>\n\n                            <Modal.Footer>\n                                <Button className='btn-secondary' variant='secondary' onClick={()=> setProdutosModal(false)}>\n                                    Cancelar\n                                </Button>\n                                <Button className='btn-primary' variant='primary' onClick={handleAddItem}>\n                                    Adicionar items ao pedido\n                                </Button>\n                            </Modal.Footer>\n                        </Modal.Body>\n                </Modal>\n\n            </div>\n        </section>\n    );\n}\n\nexport default ProductForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}